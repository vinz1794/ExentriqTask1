[
    {
        "id": "41142cae37ed8216",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "213b9301b2a5c017",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b524a609e49d509e",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "noderedschema",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "2789cb1265da0191",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "schema_bc365",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "3b2ea60f8b6e9a06",
        "type": "lower-case",
        "z": "41142cae37ed8216",
        "tenant": "e52afdaf-fc0f-4b2d-b86f-0b32d9a9f07e",
        "clientID": "796bbfa2-3c2f-407d-8e11-be4f63ff7343",
        "clientSecret": "g4c8Q~2bxjSp2GJSIaqAgqLKngTakqw4AAti3a2W",
        "baseUrl": "https://api.businesscentral.dynamics.com/v2.0/",
        "scope": "https://api.businesscentral.dynamics.com/.default",
        "grantType": "client_credentials",
        "code": "code",
        "redirectUri": "redirect uri",
        "servicesDropDown": "Movimenti_C_G_Excel;https://api.businesscentral.dynamics.com/v2.0/e52afdaf-fc0f-4b2d-b86f-0b32d9a9f07e/Production/WS/TEST%2034%20-%202023-04-04/Page/Movimenti_C_G_Excel",
        "servicesMethods": "ReadMultiple;{\"filter[]\":{\"Field\":\"Movimenti_C_G_Excel_Fields|xsd:string|Posting_Date,Document_Type,Document_No,Document_Date,G_L_Account_No,G_L_Account_Name,Description,FSE_Letter,Job_No,Global_Dimension_1_Code,Global_Dimension_2_Code,IC_Partner_Code,Gen_Posting_Type,Gen_Bus_Posting_Group,Gen_Prod_Posting_Group,VAT_Bus_Posting_Group,VAT_Prod_Posting_Group,Quantity,Amount,Debit_Amount,Credit_Amount,Additional_Currency_Amount,VAT_Amount,Bal_Account_Type,Bal_Account_No,VAT_Reporting_Date,User_ID,Source_Code,Source_Type,Source_No,Reason_Code,Reversed,Reversed_by_Entry_No,Reversed_Entry_No,FA_Entry_Type,FA_Entry_No,EAM_CurrencyCode,EAM_AmountOCY,EAM_SUBCCurrencyCode,EAM_AmountSUBCCurrencyCode,EAM_Competence,EAM_CompetenceStartingDate,EAM_CompetenceEndingDate,FSE_BusinessUnitCode,FSE_NoSeries,Entry_No,Dimension_Set_ID,External_Document_No,Shortcut_Dimension_3_Code,Shortcut_Dimension_4_Code,Shortcut_Dimension_5_Code,Shortcut_Dimension_6_Code,Shortcut_Dimension_7_Code,Shortcut_Dimension_8_Code\",\"Criteria\":\"xsd:string\",\"targetNSAlias\":\"tns\",\"targetNamespace\":\"urn:microsoft-dynamics-schemas/page/movimenti_c_g_excel\"},\"bookmarkKey\":\"xsd:string\",\"setSize\":\"xsd:int\"}",
        "environment": "Production",
        "company": "TEST%2034%20-%202023-04-04",
        "append": "ServiziWeb",
        "x": 230,
        "y": 240,
        "wires": [
            [
                "c2a92cf467c2cffc"
            ]
        ]
    },
    {
        "id": "2eb93cc73593ebec",
        "type": "inject",
        "z": "41142cae37ed8216",
        "name": "",
        "props": [],
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 70,
        "y": 200,
        "wires": [
            [
                "27775b2030b2fed0"
            ]
        ]
    },
    {
        "id": "27775b2030b2fed0",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "Array JSON Filter Parametri Richiesta",
        "func": "msg.payload = {\n    \"filter\": [\n        {\n            \"Field\": \"Posting_Date\",\n            \"Criteria\": \"2023-05-01\",\n        }\n    ],\n    \"setSize\": 5\n};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 200,
        "wires": [
            [
                "3b2ea60f8b6e9a06"
            ]
        ]
    },
    {
        "id": "869b496f2a930c9d",
        "type": "mysql",
        "z": "41142cae37ed8216",
        "mydb": "2789cb1265da0191",
        "name": "Execute prev query ",
        "x": 450,
        "y": 1060,
        "wires": [
            [
                "c1b0267330b17551"
            ]
        ]
    },
    {
        "id": "803af764b7ececeb",
        "type": "lower-case",
        "z": "41142cae37ed8216",
        "tenant": "e52afdaf-fc0f-4b2d-b86f-0b32d9a9f07e",
        "clientID": "796bbfa2-3c2f-407d-8e11-be4f63ff7343",
        "clientSecret": "g4c8Q~2bxjSp2GJSIaqAgqLKngTakqw4AAti3a2W",
        "baseUrl": "https://api.businesscentral.dynamics.com/v2.0/",
        "scope": "https://api.businesscentral.dynamics.com/.default",
        "grantType": "client_credentials",
        "code": "code",
        "redirectUri": "redirect uri",
        "servicesDropDown": "items;https://api.businesscentral.dynamics.com/v2.0/e52afdaf-fc0f-4b2d-b86f-0b32d9a9f07e/Production/WS/TEST%2034%20-%202023-04-04/Page/items",
        "servicesMethods": "ReadMultiple;{\"filter[]\":{\"Field\":\"items_Fields|xsd:string|No,Description,Type,InventoryField,Created_From_Nonstock_Item,FSE_InventoryValueZero,Substitutes_Exist,Stockkeeping_Unit_Exists,Assembly_BOM,Production_BOM_No,Routing_No,Base_Unit_of_Measure,Shelf_No,Costing_Method,Cost_is_Adjusted,Standard_Cost,Unit_Cost,Last_Direct_Cost,Price_Profit_Calculation,Profit_Percent,Unit_Price,Inventory_Posting_Group,Gen_Prod_Posting_Group,VAT_Prod_Posting_Group,Item_Disc_Group,Vendor_No,Vendor_Item_No,Tariff_No,Search_Description,Overhead_Rate,Indirect_Cost_Percent,Item_Category_Code,Blocked,Last_Date_Modified,Sales_Unit_of_Measure,Replenishment_System,Purch_Unit_of_Measure,Lead_Time_Calculation,Manufacturing_Policy,Flushing_Method,Assembly_Policy,Item_Tracking_Code,Default_Deferral_Template_Code,Coupled_to_CRM\",\"Criteria\":\"xsd:string\",\"targetNSAlias\":\"tns\",\"targetNamespace\":\"urn:microsoft-dynamics-schemas/page/items\"},\"bookmarkKey\":\"xsd:string\",\"setSize\":\"xsd:int\"}",
        "environment": "Production",
        "company": "TEST%2034%20-%202023-04-04",
        "append": "ServiziWeb",
        "x": 310,
        "y": 980,
        "wires": [
            [
                "fbda3b9ba4b3a82e"
            ]
        ]
    },
    {
        "id": "96b5b65240e999c2",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "Criteria Filter BC365",
        "func": "msg.payload = {\n    \"filter\": [\n        {\n            \"Field\": \"Last_Date_Modified\",\n            \"Criteria\": \"2023-05-26\",\n        }\n    ],\n    \"setSize\": 5\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 940,
        "wires": [
            [
                "803af764b7ececeb"
            ]
        ]
    },
    {
        "id": "9438326d1029de8f",
        "type": "inject",
        "z": "41142cae37ed8216",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 900,
        "wires": [
            [
                "96b5b65240e999c2"
            ]
        ]
    },
    {
        "id": "c1b0267330b17551",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "SQL create/update items",
        "func": "try {\n    const exist = msg.payload[0].TOT > 0;\n    const lastDateModified = msg.bc365[0].Last_Date_Modified;\n    const formattedDateTime = lastDateModified.toLocaleString();\n    const key = msg.bc365[0].Key;\n    const queryUpdate = \"UPDATE `schema_bc365`.`items` SET `Last_Date_Modified` = '\" + formattedDateTime + \"' WHERE `Key` = '\" + key + \"'\";\n    const queryAdd = \"INSERT INTO `schema_bc365`.`items` (`Last_Date_Modified`, `Key`) VALUES ('\" + formattedDateTime + \"','\" + key + \"')\";\n    msg.topic = exist ? queryUpdate : queryAdd;\n} catch (error) {\n    msg.payload = error;\n};\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1100,
        "wires": [
            [
                "036bffbe6be1670d"
            ]
        ]
    },
    {
        "id": "fbda3b9ba4b3a82e",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "SQL check exist with count",
        "func": "msg.topic = \"SELECT COUNT(*) AS TOT FROM items AS i WHERE i.Key = '24;GwAAAAJ7BjEAMAAwADAAMAAw9;5846469980;'\";\n// Set the 'returnResult' property to true\n//msg.returnResult = true;\nmsg.bc365 = msg.payload;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1020,
        "wires": [
            [
                "869b496f2a930c9d"
            ]
        ]
    },
    {
        "id": "036bffbe6be1670d",
        "type": "mysql",
        "z": "41142cae37ed8216",
        "mydb": "2789cb1265da0191",
        "name": "Execute prev query ",
        "x": 670,
        "y": 1140,
        "wires": [
            [
                "a2169f38a75b5982"
            ]
        ]
    },
    {
        "id": "a2169f38a75b5982",
        "type": "debug",
        "z": "41142cae37ed8216",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1200,
        "wires": []
    },
    {
        "id": "250306381cfb37a1",
        "type": "comment",
        "z": "41142cae37ed8216",
        "name": "Sync Node Items Dynamic with BC365",
        "info": "",
        "x": 170,
        "y": 840,
        "wires": []
    },
    {
        "id": "7e05da6474174f60",
        "type": "comment",
        "z": "41142cae37ed8216",
        "name": "Sync Node Movimenti_CG_excel Dynamic with BC365",
        "info": "",
        "x": 920,
        "y": 160,
        "wires": []
    },
    {
        "id": "0b2db704ca3959e6",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "SQL check ELEMENT OF TABLE exist with count",
        "func": "msg.topic = \"SELECT COUNT(*) AS TOT FROM movimenti_c_g_excel AS i WHERE i.Key = '\"+msg.payload.Key+\"'\";\n// Set the 'returnResult' property to true\n//msg.returnResult = true;\nmsg.bc365 = msg.payload;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 380,
        "wires": [
            [
                "0ce2a6f5803e09e6"
            ]
        ]
    },
    {
        "id": "0ce2a6f5803e09e6",
        "type": "mysql",
        "z": "41142cae37ed8216",
        "mydb": "2789cb1265da0191",
        "name": "Execute prev query ",
        "x": 1250,
        "y": 420,
        "wires": [
            [
                "4194622a2bc93b8b"
            ]
        ]
    },
    {
        "id": "4194622a2bc93b8b",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "SQL create/update Movimenti_C_G_Excel",
        "func": "try {\n    const exist = msg.payload[0].TOT>0;\n    const tableName = 'movimenti_c_g_excel';\n    const data = msg.bc365;\n\n    let query = '';\n\n    if (exist) {\n        // Genera la query di aggiornamento dinamicamente\n        query = `UPDATE ${tableName} SET `;\n\n        // Itera sulle chiavi dell'oggetto per generare le clausole di aggiornamento\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                const columnValue = data[key];\n                query += `\\`${key}\\` = \"${columnValue}\", `;\n            }\n        }\n\n        // Rimuovi l'ultima virgola e spazio dalla query\n        query = query.slice(0, -2);\n        query += ` WHERE \\`Key\\` = \"${data.Key}\"`;\n    } else {\n        // Genera la query di inserimento dinamicamente\n        let columns = '';\n        let values = '';\n\n        // Itera sulle chiavi dell'oggetto per generare la lista delle colonne e dei valori\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                const columnValue = data[key];\n                columns += `\\`${key}\\`, `;\n                values += `\"${columnValue}\", `;\n            }\n        }\n\n        // Rimuovi l'ultima virgola e spazio dalle liste di colonne e valori\n        columns = columns.slice(0, -2);\n        values = values.slice(0, -2);\n\n        // Genera la query di inserimento\n        query = `INSERT INTO ${tableName} (${columns}) VALUES (${values})`;\n    }\n\n    msg.topic = query;\n} catch (error) {\n    msg.payload = error;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 480,
        "wires": [
            [
                "3641c90c0ee49058"
            ]
        ]
    },
    {
        "id": "ec1faf4e0efddc30",
        "type": "mysql",
        "z": "41142cae37ed8216",
        "mydb": "2789cb1265da0191",
        "name": "Execute prev query ",
        "x": 130,
        "y": 540,
        "wires": [
            [
                "77e2e245d50e312d"
            ]
        ]
    },
    {
        "id": "6c95d1ff7f9e8012",
        "type": "debug",
        "z": "41142cae37ed8216",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 740,
        "wires": []
    },
    {
        "id": "b2a9d2212643e76d",
        "type": "split",
        "z": "41142cae37ed8216",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1210,
        "y": 300,
        "wires": [
            [
                "f0cabca60ec93733"
            ]
        ]
    },
    {
        "id": "c2a92cf467c2cffc",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "SQL check TABLE exist with count",
        "func": "msg.topic = \"SELECT COUNT(*) AS TOT FROM information_schema.tables WHERE table_schema = 'schema_bc365' AND table_name = 'movimenti_c_g_excel';\";\nmsg.bc365 = msg.payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 280,
        "wires": [
            [
                "e8d4a24698f60632"
            ]
        ]
    },
    {
        "id": "e8d4a24698f60632",
        "type": "mysql",
        "z": "41142cae37ed8216",
        "mydb": "2789cb1265da0191",
        "name": "Execute prev query ",
        "x": 230,
        "y": 320,
        "wires": [
            [
                "c34649c812f35633"
            ]
        ]
    },
    {
        "id": "cca0ac4b0d2254ae",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "controllo colonne gia esistenti a db",
        "func": "const tableName = 'movimenti_c_g_excel';\nconst ms = ['column1', 'column2', 'column3'];\n\nvar data = msg.bc365[0]; // Assuming msg.bc365 contains the array of JSON objects\n\nvar columnsToCheck = []; // Array to store column names\n\n// Iterate over the JSON object keys to extract column names\nfor (var key in data) {\n    if (data.hasOwnProperty(key)) {\n        columnsToCheck.push(key);\n    }\n}\n\n// Construct the SQL query to check column existence\nconst query = `\n    SELECT COUNT(*) AS columnCount\n    FROM information_schema.columns\n    WHERE table_name = '${tableName}'\n    AND column_name IN ('${columnsToCheck.join(\"', '\")}')\n`;\nmsg.topic = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 500,
        "wires": [
            [
                "882cb037d9456285"
            ]
        ]
    },
    {
        "id": "cc1a6168e7ac9aae",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "CREATE TABLE",
        "func": "var data = msg.bc365[0]; // Assuming msg.bc365 contains the array of JSON objects\n\nvar columns = []; // Array to store column names\n\n// Iterate over the JSON object keys to extract column names\nfor (var key in data) {\n    if (data.hasOwnProperty(key)) {\n        columns.push(key);\n    }\n}\n\nvar createTableQuery = \"CREATE TABLE IF NOT EXISTS `movimenti_c_g_excel` (\";\ncreateTableQuery += \"`Key` VARCHAR(255) PRIMARY KEY,\"; // Primary key column using \"Key\" column\n\n// Generate the CREATE TABLE query\nfor (var i = 0; i < columns.length; i++) {\n    if (columns[i] !== \"Key\") {\n        createTableQuery += \"`\" + columns[i] + \"` VARCHAR(255)\";\n\n        if (i !== columns.length - 1) {\n            createTableQuery += \",\";\n        }\n    }\n}\n\ncreateTableQuery += \") ENGINE=InnoDB\";\n\nmsg.topic = createTableQuery;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 500,
        "wires": [
            [
                "ec1faf4e0efddc30"
            ]
        ]
    },
    {
        "id": "c34649c812f35633",
        "type": "switch",
        "z": "41142cae37ed8216",
        "name": "",
        "property": "msg.payload[0].TOT",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "cca0ac4b0d2254ae"
            ],
            [
                "cc1a6168e7ac9aae"
            ]
        ]
    },
    {
        "id": "882cb037d9456285",
        "type": "mysql",
        "z": "41142cae37ed8216",
        "mydb": "2789cb1265da0191",
        "name": "Execute prev query ",
        "x": 410,
        "y": 540,
        "wires": [
            [
                "94016ba70e3c890a"
            ]
        ]
    },
    {
        "id": "94016ba70e3c890a",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "Select Colonne Già esistenti",
        "func": "const tableName = 'movimenti_c_g_excel';\nconst query = `\n    SELECT column_name\n    FROM information_schema.columns\n    WHERE table_name = '${tableName}'\n`;\nmsg.topic =query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 580,
        "wires": [
            [
                "3582b321c635fd00"
            ]
        ]
    },
    {
        "id": "3582b321c635fd00",
        "type": "mysql",
        "z": "41142cae37ed8216",
        "mydb": "2789cb1265da0191",
        "name": "Execute prev query ",
        "x": 590,
        "y": 620,
        "wires": [
            [
                "cc6c984abd7b84e3"
            ]
        ]
    },
    {
        "id": "cc6c984abd7b84e3",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "ALTER TABLE",
        "func": "const tableName = 'movimenti_c_g_excel';\nconst existingColumns = msg.payload;\nconst data = msg.bc365[0]; // Assuming msg.bc365 contains the array of JSON objects\n\nlet alterTableQuery = `ALTER TABLE ${tableName} `;\nlet columnList = '';\n\n// Iterate over the JSON object keys to extract column names\nfor (const key in data) {\n    if (data.hasOwnProperty(key)) {\n        let columnExists = false;\n        for (let i = 0; i < existingColumns.length; i++) {\n            const column = existingColumns[i].COLUMN_NAME;\n            if (key === column) {\n                columnExists = true;\n                break;\n            }\n        }\n        if (!columnExists) {\n            columnList += `ADD COLUMN ${key} VARCHAR(255), `;\n        }\n    }\n}\n\n// Check if there are missing columns\nif (columnList.length > 0) {\n    // Remove the trailing comma and space\n    columnList = columnList.slice(0, -2);\n    alterTableQuery += columnList;\n} else {\n    // No missing columns, set alterTableQuery to an empty string\n    alterTableQuery = '';\n}\n\nmsg.topic = alterTableQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 660,
        "wires": [
            [
                "dddf893df54a789d"
            ]
        ]
    },
    {
        "id": "dddf893df54a789d",
        "type": "mysql",
        "z": "41142cae37ed8216",
        "mydb": "2789cb1265da0191",
        "name": "Execute prev query ",
        "x": 730,
        "y": 700,
        "wires": [
            [
                "6c95d1ff7f9e8012"
            ]
        ]
    },
    {
        "id": "7341635575a9fde3",
        "type": "lower-case",
        "z": "41142cae37ed8216",
        "tenant": "e52afdaf-fc0f-4b2d-b86f-0b32d9a9f07e",
        "clientID": "796bbfa2-3c2f-407d-8e11-be4f63ff7343",
        "clientSecret": "g4c8Q~2bxjSp2GJSIaqAgqLKngTakqw4AAti3a2W",
        "baseUrl": "https://api.businesscentral.dynamics.com/v2.0/",
        "scope": "https://api.businesscentral.dynamics.com/.default",
        "grantType": "client_credentials",
        "code": "code",
        "redirectUri": "redirect uri",
        "servicesDropDown": "Movimenti_C_G_Excel;https://api.businesscentral.dynamics.com/v2.0/e52afdaf-fc0f-4b2d-b86f-0b32d9a9f07e/Production/WS/TEST%2034%20-%202023-04-04/Page/Movimenti_C_G_Excel",
        "servicesMethods": "ReadMultiple;{\"filter[]\":{\"Field\":\"Movimenti_C_G_Excel_Fields|xsd:string|Posting_Date,Document_Type,Document_No,Document_Date,G_L_Account_No,G_L_Account_Name,Description,FSE_Letter,Job_No,Global_Dimension_1_Code,Global_Dimension_2_Code,IC_Partner_Code,Gen_Posting_Type,Gen_Bus_Posting_Group,Gen_Prod_Posting_Group,VAT_Bus_Posting_Group,VAT_Prod_Posting_Group,Quantity,Amount,Debit_Amount,Credit_Amount,Additional_Currency_Amount,VAT_Amount,Bal_Account_Type,Bal_Account_No,VAT_Reporting_Date,User_ID,Source_Code,Source_Type,Source_No,Reason_Code,Reversed,Reversed_by_Entry_No,Reversed_Entry_No,FA_Entry_Type,FA_Entry_No,EAM_CurrencyCode,EAM_AmountOCY,EAM_SUBCCurrencyCode,EAM_AmountSUBCCurrencyCode,EAM_Competence,EAM_CompetenceStartingDate,EAM_CompetenceEndingDate,FSE_BusinessUnitCode,FSE_NoSeries,Entry_No,Dimension_Set_ID,External_Document_No,Shortcut_Dimension_3_Code,Shortcut_Dimension_4_Code,Shortcut_Dimension_5_Code,Shortcut_Dimension_6_Code,Shortcut_Dimension_7_Code,Shortcut_Dimension_8_Code\",\"Criteria\":\"xsd:string\",\"targetNSAlias\":\"tns\",\"targetNamespace\":\"urn:microsoft-dynamics-schemas/page/movimenti_c_g_excel\"},\"bookmarkKey\":\"xsd:string\",\"setSize\":\"xsd:int\"}",
        "environment": "Production",
        "company": "TEST%2034%20-%202023-04-04",
        "append": "ServiziWeb",
        "x": 1190,
        "y": 240,
        "wires": [
            [
                "b2a9d2212643e76d"
            ]
        ]
    },
    {
        "id": "bfee86d78de36c86",
        "type": "inject",
        "z": "41142cae37ed8216",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 790,
        "y": 200,
        "wires": [
            [
                "ae8171205380dfe9"
            ]
        ]
    },
    {
        "id": "ae8171205380dfe9",
        "type": "function",
        "z": "41142cae37ed8216",
        "name": "Array JSON Filter Parametri Richiesta",
        "func": "msg.payload = {\n    \"filter\": [\n        {\n            \"Field\": \"Posting_Date\",\n            \"Criteria\": \"2023-05-01\",\n        }\n    ],\n    \"setSize\": 5\n};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 240,
        "wires": [
            [
                "7341635575a9fde3"
            ]
        ]
    },
    {
        "id": "3641c90c0ee49058",
        "type": "mysql",
        "z": "41142cae37ed8216",
        "mydb": "2789cb1265da0191",
        "name": "Execute prev query ",
        "x": 1430,
        "y": 520,
        "wires": [
            [
                "a1bad5b309f02e3f"
            ]
        ]
    },
    {
        "id": "a1bad5b309f02e3f",
        "type": "debug",
        "z": "41142cae37ed8216",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1420,
        "y": 580,
        "wires": []
    },
    {
        "id": "42a99c169bf0685c",
        "type": "comment",
        "z": "41142cae37ed8216",
        "name": "CREATE/ALTER TABLE",
        "info": "",
        "x": 110,
        "y": 160,
        "wires": []
    },
    {
        "id": "77e2e245d50e312d",
        "type": "debug",
        "z": "41142cae37ed8216",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 220,
        "y": 600,
        "wires": []
    },
    {
        "id": "c3321a2df38434aa",
        "type": "comment",
        "z": "41142cae37ed8216",
        "name": "for Create table",
        "info": "Crea una tabella con un colonna Key come chiave primaria",
        "x": 120,
        "y": 460,
        "wires": []
    },
    {
        "id": "f0cabca60ec93733",
        "type": "delay",
        "z": "41142cae37ed8216",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1220,
        "y": 340,
        "wires": [
            [
                "0b2db704ca3959e6"
            ]
        ]
    },
    {
        "id": "2887d1c163f8680e",
        "type": "comment",
        "z": "41142cae37ed8216",
        "name": "for Alter Table",
        "info": "Controlla le colonne presenti sulla tabella,\nandando ad aggiungere quelle mancanti, qualora vi siano.",
        "x": 390,
        "y": 460,
        "wires": []
    },
    {
        "id": "fe00a2996e14b51e",
        "type": "comment",
        "z": "41142cae37ed8216",
        "name": "Variabili a Seconda del WS selezionato",
        "info": "config di BC365\nnome della tabella\nchiave primaria con cui fare controlli sulla tabella",
        "x": 1510,
        "y": 340,
        "wires": []
    },
    {
        "id": "a92c66926248f559",
        "type": "comment",
        "z": "41142cae37ed8216",
        "name": "Movimenti_c_g_excel",
        "info": "",
        "x": 400,
        "y": 60,
        "wires": []
    },
    {
        "id": "7ad0ca990dd1cca7",
        "type": "comment",
        "z": "41142cae37ed8216",
        "name": "for BC365",
        "info": "Configura i parametri relativi all'applicazione BC365 a cui vuoi connetterti\nseleziona il WS, il Metodo e l'action\nvisualizza il JSON dove verrà mostrato i parametri del metodo con cui potrei effettuare la richiesta.(Array JSON P.R.)",
        "x": 400,
        "y": 240,
        "wires": []
    },
    {
        "id": "bfad8f896cb8f6ca",
        "type": "comment",
        "z": "41142cae37ed8216",
        "name": "for BC365",
        "info": "Configura i parametri relativi all'applicazione BC365 a cui vuoi connetterti\nseleziona il WS, il Metodo e l'action\nvisualizza il JSON dove verrà mostrato i parametri del metodo con cui potrei effettuare la richiesta.(Array JSON P.R.)",
        "x": 1340,
        "y": 240,
        "wires": []
    },
    {
        "id": "086494b91f096cac",
        "type": "comment",
        "z": "41142cae37ed8216",
        "name": "for BC365",
        "info": "Configura i parametri relativi all'applicazione BC365 a cui vuoi connetterti\nseleziona il WS, il Metodo e l'action\nvisualizza il JSON dove verrà mostrato i parametri del metodo con cui potrei effettuare la richiesta.(Array JSON P.R.)",
        "x": 460,
        "y": 980,
        "wires": []
    }
]